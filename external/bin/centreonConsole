#!/usr/bin/php -q
<?php

    $bootstrap = realpath(__DIR__ . "/../../core/commandLine/bootstrap.php");
    require_once $bootstrap;

    // Init Var
    $requestLine = "";
    $parametersLine = null;
    $helpMode = false;
    $listMode = false;
    $getVersion = false;
    $requireAuthentication = false;

    // Get Options
    $shortOpts = "hvlu::p::";
    $options = getopt($shortOpts);
    
    // Remove options from the list of arguments
    foreach($options as $o => $a)
    {
        while($k = array_search("-" . $o . $a, $argv))
        {
            if ($k) {
                unset($argv[$k]);
            }
            if (preg_match("/^.*".$o.":.*$/i", $shortOpts)) {
                unset($argv[$k+1]);
            }
        }
    }
    $argv = array_merge( $argv );

    // Get Arguments
    if (isset($argv[1])) {
        $requestLine = $argv[1];
    }
    $subcommandArgs = array_slice($argv, 2);

    // Check Options
    if (isset($options['h'])) {
        $helpMode = true;
    }
    if (isset($options['l'])) {
        $listMode = true;
    }
    if (isset($options['u'])) {
        $requireAuthentication = true;
    }

    if (isset($options['v'])) {
        $getVersion = true;
    }

    // No args => display help
    if ($requestLine == '' && !($listMode || $getVersion )) {
        $helpMode = true;
    }

    try {
        $commandeLineManager = new \Centreon\Internal\Command($requestLine, $subcommandArgs);
        if ($helpMode) {
            $commandeLineManager->getHelp();
        } elseif ($listMode) {
            $commandeLineManager->getCommandList();
        } elseif ($getVersion) {
            $commandeLineManager->getVersion();
        } else {
            if ($requireAuthentication) {
                $password = '';
                if (isset($options['p'])) {
                    $password = $options['p'];
                }
                $commandeLineManager->authenticate($options['u'], $password);
            }
            $commandeLineManager->executeRequest();
            exit(0);
        }
        exit(0);
    } catch(\Exception $e) {
        \Centreon\Internal\Utils\CommandLine\InputOutput::display(
            '[Error ' . $e->getCode() . '] => ' . $e->getMessage(),
            true,
            'red'
        );
        exit(1);
    }
?>
