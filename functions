# -*-Shell-script-*-
#
# functions     This file contains functions to be used by Centreon install scripts
#

## COLOR FUNCTIONS

RES_COL=60
MOVE_TO_COL="echo -en \\033[${RES_COL}G"
SETCOLOR_INFO="echo -en \\033[1;38m"
SETCOLOR_SUCCESS="echo -en \\033[1;32m"
SETCOLOR_FAILURE="echo -en \\033[1;31m"
SETCOLOR_WARNING="echo -en \\033[1;33m"
SETCOLOR_NORMAL="echo -en \\033[0;39m"
SNMP_DIR="/etc/snmp/";
CENTREON_CONF="/etc/centreon.conf"

function  echo_info() {
    echo -n "$1"
    $MOVE_TO_COL
    $SETCOLOR_INFO
    echo -n "$2"
    $SETCOLOR_NORMAL
    echo -e "\r"
}

function  echo_success() {
    echo -n "$1"
    $MOVE_TO_COL
    $SETCOLOR_SUCCESS
    echo -n "$2"
    $SETCOLOR_NORMAL
    echo -e "\r"
}

function echo_failure() {
    echo -n "$1"
    $MOVE_TO_COL
    $SETCOLOR_FAILURE
    echo -n "$2"
    $SETCOLOR_NORMAL
    echo -e "\r"
}

function echo_passed() {
    echo -n "$1"
    $MOVE_TO_COL
    $SETCOLOR_WARNING
    echo -n "$2"
    $SETCOLOR_NORMAL
    echo -e "\r"
}

function echo_warning() {
    echo -n "$1"
    $MOVE_TO_COL
    $SETCOLOR_WARNING
    echo -n "$2"
    $SETCOLOR_NORMAL
    echo -e "\r"
}

## FUNCTION

# Check apache version, and configure it. Ask to restart apache server
# Make a copy of the original file as httpd.conf.initial

function configureApache()
{
    echo ""
    echo "------------------------------------------------------------------------"
    echo "                        Configure Apache server"
    echo "------------------------------------------------------------------------"
    echo ""
    echo ""

    if test -e $DIR_APACHE_CONF/centreon.conf ; then
		echo "Finding Apache Centreon configuration file"
		echo_success "'$DIR_APACHE_CONF/centreon.conf' :" "OK"
		echo "Do you want rewrite Apache configuration file ?"
		echo -n "    [y/n], default to [y]:"
		read temp
		if [ "$temp" != "y" ] && [ "$temp" != "n" ] && [ ! -z $temp ] ;then
		    while [ "$temp" != "y" ] && [ "$temp" != "n" ] && [ ! -z $temp ]
		      do
		      echo "Do you want rewrite Apache configuration file ?"
		      echo -n "    [y/n], default to [y]:"
		      read temp
		    done
		fi
		if [ -z $temp ];then
		    temp=y
		fi
	    else
			temp=y
    	fi
    
	    if [ $temp = "y" ];then
			echo "" > $DIR_APACHE_CONF/centreon.conf
			cat << EOF >> $DIR_APACHE_CONF/centreon.conf
##
## Section add by Centreon Install Setup
##
	
AddType application/x-java-jnlp-file .jnlp
Alias /centreon $INSTALL_DIR_OREON/www/
<Directory "$INSTALL_DIR_OREON/www">
    Options None
    AllowOverride AuthConfig Options
    Order allow,deny
    Allow from all
</Directory>

EOF
        echo_success "Create '$DIR_APACHE_CONF/centreon.conf'" "OK"
        echo_success "Configuring Apache" "OK"
    else
		echo_passed "Apache is already configurated" "PASSED"
    fi

    # After finishing the configuration -> 
    # restart apache !
    if [ -x /etc/init.d/apache ] ; then
		/etc/init.d/apache restart 2>&1 >> $LOG_FILE
    elif [ -x /etc/init.d/httpd ] ; then
		/etc/init.d/httpd restart 2>&1 >> $LOG_FILE
    elif [ -e /etc/init.d/apache2 ] ; then
		/etc/init.d/apache2 restart 2>&1 >> $LOG_FILE
	elif [ -e /usr/local/etc/rc.d/apache ] ; then
		/usr/local/etc/rc.d/apache restart 2>&1 >> $LOG_FILE
    elif [ -e /usr/local/etc/rc.d/apache2 ]; then
		/etc/init.d/apache2 restart 2>&1 >> $LOG_FILE
    else
		echo_warning "Unable to restart apache server" "WARNING"
    fi
}

function configureSUDO(){
    echo ""
    echo "------------------------------------------------------------------------"
    echo "                            Configure Sudo"
    echo "------------------------------------------------------------------------"
    echo ""
    echo ""
    
    # Find Nagios Init Script
    check_nagios_init_script

    sudo=`cat $SUDO_FILE | grep CENTREON > /dev/null; echo $?`
    
    if [ $sudo = '1' ]; then
    	cat <<__EOF__>> $SUDO_FILE
#Add by CENTREON installation script
User_Alias      CENTREON= $WEB_USER
## Nagios Restart
CENTREON   ALL = NOPASSWD: $NAGIOS_INIT_SCRIPT restart
## Nagios reload
CENTREON   ALL = NOPASSWD: $NAGIOS_INIT_SCRIPT reload
## Snmptrapd Restart
CENTREON   ALL = NOPASSWD: /etc/init.d/snmptrapd restart

__EOF__
		echo_success "Configuring Sudo" "OK"
    else
		echo_passed "Sudo is already configurated" "PASSED"
    fi
}

function createConfFile()
{
	echo ""
	echo "------------------------------------------------------------------------"
	echo "                         Centreon Post Install"
	echo "------------------------------------------------------------------------"
	echo ""
	echo ""

	INSTALL_DIR_CENTREON_CONF="$INSTALL_DIR_CENTREON/www/install/install.conf.php"
	
	echo "" > $INSTALL_DIR_CENTREON_CONF
	cat <<__EOF__>> $INSTALL_DIR_CENTREON_CONF
<?
/**
Centreon is developped with GPL Licence 2.0 :
http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt
Developped by : Julien Mathis - Romain Le Merlus

The Software is provided to you AS IS and WITH ALL FAULTS.
CENTREON makes no representation and gives no warranty whatsoever,
whether express or implied, and without limitation, with regard to the quality,
safety, contents, performance, merchantability, non-infringement or suitability for
any particular or intended purpose of the Software found on the CENTREON web site.
In no event will CENTREON be liable for any direct, indirect, punitive, special,
incidental or consequential damages however they may arise and even if OREON has
been previously advised of the possibility of such damages.

For information : contact@oreon-project.org
*/

\$conf_centreon['centreon_dir'] = "$INSTALL_DIR_CENTREON/";
\$conf_centreon['centreon_dir_www'] = "$INSTALL_DIR_CENTREON/www/";
\$conf_centreon['centreon_dir_rrd'] = "$INSTALL_DIR_CENTREON/rrd/";
\$conf_centreon['nagios'] = "$INSTALL_DIR_NAGIOS/";
\$conf_centreon['nagios_conf'] = "$NAGIOS_ETC/";
\$conf_centreon['nagios_plugins'] = "$NAGIOS_PLUGIN/";
\$conf_centreon['nagios_bin'] = "$NAGIOS_BIN/";
\$conf_centreon['nagios_init_script'] = "$NAGIOS_INIT_SCRIPT";
\$conf_centreon['rrdtool_dir'] = "$BIN_RRDTOOL";
\$conf_centreon['apache_user'] = "$WEB_USER";
\$conf_centreon['apache_group'] = "$WEB_GROUP";
\$conf_centreon['nagios_user'] = "$NAGIOS_USER";
\$conf_centreon['nagios_group'] = "$NAGIOS_GROUP";
\$conf_centreon['mail'] = "$BIN_MAIL";
\$conf_centreon['pear_dir'] = "$PEAR_PATH";

__EOF__

	# Conf nagios.cfg
	
	for fichier in `cat $NAGIOS_ETC/nagios.cfg | grep _file | grep -v \#`
	do
		echo "\$conf_centreon['$(echo "$fichier" |cut -d= -f1)'] = \"$(echo "$fichier" |cut -d= -f2)\";" >> $INSTALL_DIR_CENTREON_CONF
	done
	
	# Conf nagios.cfg
	
	for fichier in `cat $NAGIOS_ETC/nagios.cfg | grep _path | grep -v \#`
	do
		echo "\$conf_centreon['$(echo "$fichier" |cut -d= -f1)'] = \"$(echo "$fichier" |cut -d= -f2)\";" >> $INSTALL_DIR_CENTREON_CONF
	done
	
	# Conf GCI.cfg
	
	for fichier in `cat $NAGIOS_ETC/cgi.cfg | grep physical_html_path | grep -v \#`
	do
		echo "\$conf_centreon['$(echo "$fichier" |cut -d= -f1)'] = \"$(echo "$fichier" |cut -d= -f2)\";" >> $INSTALL_DIR_CENTREON_CONF		
	done
	
	echo "?>" >> $INSTALL_DIR_CENTREON_CONF
	echo_success "Create $INSTALL_DIR_CENTREON_CONF" "OK"
	
	cat <<__EOF__>> $CENTREON_CONF
INSTALL_DIR_CENTREON=$INSTALL_DIR_CENTREON
NAGIOS_ETC=$NAGIOS_ETC
NAGIOS_PLUGIN=$NAGIOS_PLUGIN
NAGIOS_BIN=$NAGIOS_BIN
NAGIOS_IMG=$NAGIOS_IMG
INSTALL_DIR_NAGIOS=$INSTALL_DIR_NAGIOS
RRD_PERL=$RRD_PERL
SUDO_FILE=$SUDO_FILE
WEB_USER=$WEB_USER
WEB_GROUP=$WEB_GROUP
NAGIOS_USER=$NAGIOS_USER
NAGIOS_GROUP=$NAGIOS_GROUP
BIN_RRDTOOL=$BIN_RRDTOOL
BIN_MAIL=$BIN_MAIL
PEAR_PATH=$PEAR_PATH
__EOF__
	echo_success "Create $CENTREON_CONF " "OK"
}

# When exit on error
function error()
{
    echo "ERROR"
    exit 2
}

# Find the user and group nagios in nagios.cfg and ask if we don't find
function find_user_nagios()
{
    NAGIOS_USER=`more $NAGIOS_ETC/nagios.cfg | grep ^nagios_user | cut -d = -f 2`
    if [ -z "$NAGIOS_USER"  ] ; then
	for fichier in $NAGIOS_ETC/*.cfg
	  do
	  if [ -f "$fichier" ];	then
	      NAGIOS_USER_TEMP=`more $fichier | grep ^nagios_user | cut -d = -f 2`
	      if [ -n "$NAGIOS_USER_TEMP" ]; then
		  NAGIOS_USER=$NAGIOS_USER_TEMP
	      fi
	  fi
	done
    fi
    
    if [ -z "$NAGIOS_USER"  ] ; then
		# Nagios User
		NAGIOS_USER="nagios"
		echo_passed "Sorry, we don't found nagios user" "PASSED"
		echo "Which is your nagios user ?"
		echo -n "default to [$NAGIOS_USER]:"
		read temp
		test_answer NAGIOS_USER $temp
		echo ""
    else
		echo_info "Finding Nagios user :" "$NAGIOS_USER"
    fi
}

function find_group_nagios()
{
    NAGIOS_GROUP=`more $NAGIOS_ETC/nagios.cfg | grep ^nagios_group | cut -d = -f 2`
    
    if [ -z "$NAGIOS_GROUP"  ] ; then
	for fichier in $NAGIOS_ETC/*.cfg
	  do
	  if [ -f "$fichier" ];	then
	      NAGIOS_GROUP_TEMP=`more $fichier | grep ^nagios_group | cut -d = -f 2`
	      if [ -n "$NAGIOS_GROUP_TEMP" ]; then
		  NAGIOS_GROUP=$NAGIOS_GROUP_TEMP
	      fi
	  fi
    	done
    fi
    
    if [ -z "$NAGIOS_GROUP"  ] ; then
		# Nagios Group
		NAGIOS_GROUP="nagios"
		echo_passed "Sorry, we don't found nagios group" "PASSED"
		echo "In which group is nagios user ?"
		echo -n "default to [$NAGIOS_GROUP]:"
		read temp
		test_answer NAGIOS_GROUP $temp
		echo ""
    else
		echo_info "Finding Nagios group :" "$NAGIOS_GROUP"
    fi
}

# Check the user and group nagios and create it if necessary

function check_user_nagios()
{
    # Try to find nagios user/group from nagios.cfg file.
    # If not, we ask...
    find_user_nagios

    nagios_user_grep=`grep $NAGIOS_USER /etc/passwd > /dev/null; echo $?`
    if [ $nagios_user_grep == 0 ]; then
    	echo_success "Finding nagios user '$NAGIOS_USER' in /etc/passwd" "YES"
    else
	echo "Nagios User $NAGIOS_USER Not found"
	echo ""
	echo "You have to create you nagios user"
	echo "useradd -G $NAGIOS_GROUP $NAGIOS_USER"
	exit
    fi
}

function check_group_nagios()
{
    # Try to find nagios user/group from nagios.cfg file.
    # If not, we ask...
    find_group_nagios

    nagios_group_grep=`grep $NAGIOS_GROUP /etc/group > /dev/null; echo $?`
    if [ $nagios_group_grep == 0 ]; then
    	echo_success "Finding nagios group '$NAGIOS_GROUP' in /etc/group" "YES"
    else
	echo "Nagios Group $NAGIOS_GROUP Not found"
	echo ""
	echo "You have to create you nagios group"
	echo "groupadd $NAGIOS_GROUP"
	exit 1
    fi
}

function check_nagios_init_script()
{
    if [ -x "/etc/init.d/nagios" ]; then
		NAGIOS_INIT_SCRIPT="/etc/init.d/nagios"
    elif [ -x "/etc/init.d/nagios2" ] ; then
		NAGIOS_INIT_SCRIPT="/etc/init.d/nagios2"
    elif [ -x "/etc/init.d/nagios3" ] ; then
		NAGIOS_INIT_SCRIPT="/etc/init.d/nagios3"
    elif [ -x "/usr/local/etc/rc.d/nagios" ] ; then
		NAGIOS_INIT_SCRIPT="/usr/local/etc/rc.d/nagios"
    elif [ -x $DEFAULT_NAGIOS_INIT_SCRIPT ] ; then
		NAGIOS_INIT_SCRIPT=$DEFAULT_NAGIOS_INIT_SCRIPT
    fi
    
    if [ -z "$NAGIOS_INIT_SCRIPT" ] ; then
		echo_passed "Nagios init script" "NOT FOUND"
		echo "Which is your nagios init script ?"
		echo -n "default is [$NAGIOS_INIT_SCRIPT]:"
		read temp
		test_answer NAGIOS_INIT_SCRIPT $temp
		echo ""
	else
		echo "Nagios init script : $NAGIOS_INIT_SCRIPT"
		echo_success "Nagios init script " "OK"
    fi

}

function check_httpd_directory()
{
    if [ -d /etc/apache/conf ]; then
		DIR_APACHE="/etc/apache/conf"
		DIR_APACHE_CONF="/etc/apache/conf.d"
		HTPASSWD="htpasswd"
    elif [ -d /usr/local/apache2/conf ] ; then
		DIR_APACHE="/usr/local/apache2/conf"
		DIR_APACHE_CONF="/usr/local/apache2/conf"
		HTPASSWD="htpasswd2"
    elif [ -d /etc/apache2 ] ; then
		DIR_APACHE="/etc/apache2"
		DIR_APACHE_CONF="/etc/apache2/conf.d"
		HTPASSWD="htpasswd2"
    elif [ -d /etc/httpd/conf ] ; then
		DIR_APACHE="/etc/httpd/conf"
		DIR_APACHE_CONF="/etc/httpd/conf.d"
		HTPASSWD="htpasswd"
    elif [ -d /usr/local/etc/apache ] ; then
		DIR_APACHE="/usr/local/etc/apache"
		DIR_APACHE_CONF="/usr/local/etc/apache/Includes"
		HTPASSWD="htpasswd"
    elif [ -d /usr/local/etc/apache2 ] ; then
		DIR_APACHE="/usr/local/etc/apache2"
		DIR_APACHE_CONF="/usr/local/etc/apache2/Includes"
		HTPASSWD="htpasswd"
    fi


    if [ -e $DIR_APACHE/apache2.conf ] ; then
		APACHE_CONF="apache2.conf"
    elif [ -e $DIR_APACHE/commondhttpd.conf ] ; then
		APACHE_CONF="commondhttpd.conf"
    elif [ -e $DIR_APACHE/httpd.conf ] ; then
		APACHE_CONF="httpd.conf"
    fi
}

function check_user_apache()
{
    WEB_USER=`cat $DIR_APACHE/$APACHE_CONF | grep -w ^User | cut -d " " -f 2`
    if [ -z "$WEB_USER"  ] ; then
	for fichier in $DIR_APACHE/*
	  do
	  if [ -f "$fichier" ];	then
	      WEB_USER_TEMP=`more $fichier | grep -w ^User | cut -d " " -f 2`
	      if [ -n "$WEB_USER_TEMP" ]; then
		  WEB_USER=$WEB_USER_TEMP
	      fi
	  fi
	done
    fi
    echo_info "Finding Apache user :" "$WEB_USER"
}

function check_group_apache()
{
    WEB_GROUP=`cat $DIR_APACHE/$APACHE_CONF | grep -w ^Group | cut -d " " -f 2`
    if [ -z "$WEB_GROUP"  ] ; then
	for fichier in $DIR_APACHE/*
	  do
	  if [ -f "$fichier" ];	then
	      WEB_GROUP_TEMP=`more $fichier | grep -w ^Group | cut -d " " -f 2`
	      if [ -n "$WEB_GROUP_TEMP" ]; then
		  WEB_GROUP=$WEB_GROUP_TEMP
	      fi
	  fi
	done
    fi
    echo_info "Finding Apache group :" "$WEB_GROUP"
}



function copyInTempFile()
{
	# Prepare centreon Plugins
    echo "Preparing Centreon Plugins..."
    if test -d $TMPDIR ; then
		echo "$TMPDIR exists"
    else
		mkdir $TMPDIR
    fi
	cp -Rf * $TMPDIR/
}

function InstallPlugins()
{
	# set Plugins in unix mod
    find $TMPDIR/Plugins/ -name "*" -exec dos2unix -d {} \;  2>&1 >> $LOG_FILE
    
    # Prepare code
    mkdir $TMPDIR/Plugins-Ready/

	for fichier in $TMPDIR/Plugins/*
    do
    	if [ -d "$fichier" ]; then
	  		echo ""
      	else
			filename=`echo $fichier  | sed -e 's|.*\/\(.*\)|\1|'`
	  		`sed -e 's|@NAGIOS_VAR@|'"$NAGIOS_VAR"'|g' -e 's|@INSTALL_DIR_NAGIOS@|'"$INSTALL_DIR_NAGIOS"'|g' -e 's|@NAGIOS_ETC@|'"$NAGIOS_ETC"'|g' -e 's|@NAGIOS_PLUGINS@|'"$NAGIOS_PLUGIN"'|g' -e 's|@RRDTOOL_PERL_LIB@|'"$RRD_PERL"'|g' -e 's|@INSTALL_DIR_CENTREON@|'"$INSTALL_DIR_CENTREON"'|g'  "$fichier" > "$TMPDIR/Plugins-Ready/$filename"`
	 		echo_success " - $filename" "OK"  
      	fi
    done

    # Set restriction 
    chmod 755 $TMPDIR/Plugins-Ready/*
    chmod 444 $TMPDIR/Plugins-Ready/centreon.conf
    chown $NAGIOS_USER.$NAGIOS_GROUP $TMPDIR/Plugins-Ready/*

    # Check if plugin dir exists
    if test -d $NAGIOS_PLUGIN ; then
		echo_success "Directory $NAGIOS_PLUGIN" "OK"
    else
		mkdir_result=`mkdir $NAGIOS_PLUGIN 2>&1 >> $LOG_FILE; echo $?`
		if [ $mkdir_result = "0" ]; then
	    	echo_success "mkdir '$NAGIOS_PLUGIN'" "OK"
		else
	    	echo_failure "mkdir '$NAGIOS_PLUGIN'" "FAILED"
	    	return
		fi
    fi

    # Copy plugins in nagios plugins dir
    echo "Do you want to install Centreon Plugins ? "
    echo ""
    echo -n "[y/n], default to [y]:"
    read temp
    if [ "$temp" != "y" ] && [ "$temp" != "n" ] && [ ! -z $temp ] ;then
	while [ "$temp" != "y" ] && [ "$temp" != "n" ] && [ ! -z $temp ]
		do
	  	echo "Do you want to install Centreon Plugins ? "
	  	echo -n "[y/n], default to [y]:"
	  	read temp
	done
    fi
    if [ -z $temp ];then
		temp=y
    fi
    if [ $temp = "y" ];then
		cp -a $TMPDIR/Plugins-Ready/* $NAGIOS_PLUGIN/ 2>&1 >> $LOG_FILE
		echo_success "Installing Centreon Plugins on '$NAGIOS_PLUGIN'" "OK"
    fi
}
