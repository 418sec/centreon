# -*-Shell-script-*-
#
# functions_install     This file contains Installation functions to be used by Oreon install scripts
#

##
## VARIABLE
##

LOG_INSTALL="install.log"
LOG_VERSION="Centreon v 1.4.1-RC1"
BACKTITLE="Centreon Installation"
TITLE="\Z4\ZbCentreon v 1.4\Zn"
DIALOG='dialog --colors'
QUITMSG="\n\Z1\ZbDo you really want to quit ?\Zn"
TEMP=/tmp/install.$$
TEMP_PATH=/tmp/install2.$$
TEMP2=/tmp/install.tmp
SRC_OREON="oreon_src"
PLUGINS_DIR="Plugins"
PWD=`pwd`
LOG_FILE="$PWD/log/install_oreon.log"
TRUETYPE="/usr/X11R6/lib/X11/fonts/truetype"
SNMP_DIR="/etc/snmp"
OREON_CONF="/etc/oreon.conf"

##
## Installation
##

#First message of centreon installation
function Welcome() {
	#begining of install log
	log_begin
	
	
	# Welcome
		dialog_msgbox "Welcome to Centreon 1.4 Installation!\
		\nFor more information reagarding this procedure, please see the Centreon Installation Guide."
	
	if [ $temp != 0 ]; then
	    quit
	fi
	License
}

#display the terms of the licence and ask if user is ok
function License() {	
	# License
	temp=0
	while [ $temp != 1 ]
	do
	  
	  dialog_textbox "LICENCE"
	  
	  if [ $temp != 0 ]; then
	      quit
	  fi
	dialog_yesno "\Z3\ZuIMPORTANT:\Zn
	BY SELECTING THE 'YES' OPTION BELOW, DOWNLOADING, INSTALLING,OR OTHERWISE USING THIS SOFTWARE, YOU ACKNOWLEDGE THAT YOU HAVE READ THE LICENSE AGREEMENT, AND THAT YOU AGREE TO BE BOUND BY ITS TERMS AND CONDITIONS.
	IF YOU DO NOT AGREE TO ALL OF THE TERMS AND CONDITIONS OF SUCH AGREEMENT, YOU ARE NOT AN AUTHORIZED USER OF THE SOFTWARE AND IT IS YOUR RESPONSIBILITY TO EXIT THIS DOWNLOADING/INSTALLATION PROCESS WITHOUT DOWNLOADING OR INSTALLING THE SOFTWARE BY SELECTING THE 'NO' OPTION BELOW, AND TO DELETE THE SOFTWARE FROM YOUR COMPUTER.
	\nDo you accept the terms of this license? " 17 75
		
	case $temp in
	0)#Cancel
		test_quit "In order to install Centreon you must accept this agreement.\n$QUITMSG"
		;;
	3)#No
		quit
		;;
	1)#Yes
		;;
	2)#Previous
		Welcome
		prev_funct
		;;
	*)
		quit
	esac
	
	done
	log_set_line "License			: OK"
	Warning
}

#display warning message : the old base will be delete
function Warning () {
	# Warning
	temp=0
	while [ $temp != 1 ]
	do
	  dialog_prevnext "\Z1WARNING!!!\Zn\nSetup will delete all previous informations in your OREON DATABASE.
			\nDo you want to continue the installation ?" 10 47

	case $temp in
	0)#Cancel
		test_quit "$QUITMSG"
		;;
	3)#Previous
		License
		prev_funct
		;;
	1)#Next
		;;
	*)
		quit
	esac
	
	done
	
	Old_oreon_conf
}

##
## Configuration
##

#test if old configuration exist and ask user if he want use it
function Old_oreon_conf() {
	# old Oreon conf
	# log old Oreon conf
	log_set_title "Old oreon configuration"
	if test -a $OREON_CONF ; then
	
		log_set_line "old Oreon conf	: OK"

	    dialog_yesno "An old Installation of Centreon have been detected
			\nDo you want to use last Centreon Installation parameters ?" 8 62
	
		case $temp in
		0)#Cancel
			test_quit "$QUITMSG"
			;;
		3)#No
			log_set_line "using old Oreon conf	: FAILURE"
			;;
		2)#Previous
			Warning
			prev_funct
			;;
		1)#Yes
			dialog_msgbox "\nusing $OREON_CONF : OK"
			. $OREON_CONF
			log_set_line "using old Oreon conf	: OK"
			;;
		*)
			quit
		esac
	else
		log_set_line "old Oreon conf		: FAILURE"
	fi

	Nagios_conf
}

#set all nagios path and test if all path exist
function Nagios_conf() {
	# Nagios conf
	# log old Oreon conf
	log_set_title "Nagios  configuration"
	err=2
	while [ $err != 0 ]
	do
		# Only when nagios paths don't exist
		if [ $err = 1 ] ; then
			dialog_msgbox "\nWrong type of Nagios installation!
			  	\nPlease choose a other one.\n "
		fi
		temp=1
		if [ $err != 3 ] ; then
			# Configure type of installation
			while [ $temp != 0 ]
			do
				$DIALOG --backtitle "$BACKTITLE" --title "$TITLE" \
					--extra-button --extra-label " Cancel "\
    				--cancel-label " Previous " \
					--radiolist "Please select from the list on the below, the type of your Nagios install." 15 52 4 \
				"RPM" "Installation with RPM package of Nagios" off \
				"Standard" "Default compilation of Nagios" on \
				"Custom" "Custom compilation of Nagios" off \
				"Not installed" "No Nagios installation" off 2> $TEMP
				temp=$?
				case $temp in
				3)#No
					test_quit "$QUITMSG"
					;;
				1)#Previous
					if test -a $OREON_CONF ; then
						Old_oreon_conf
					else
						Warning
					fi
					prev_funct
					;;
				0)#yes
					;;
				*)
					quit
				esac
			done
			
			inst_nag=`cat $TEMP`
			
			# Initialisation of default path 
			case $inst_nag in
			    "RPM")
				set_rpm_dir
				;;
			    "Standard")
				set_standard_dir
				;;
			    "Custom")
				set_custom_dir
				;;
			    *)
				dialog_msgbox "\nPlease install Nagios before the Centreon Installation"
				prev_funct
				;;
			esac
		fi
		
		rm $TEMP 2> /dev/null
		# Validation or modification of nagios path
		temp=1
		while [ $temp != 0 ]
		do 
			exec 3>&1
	    	value=`$DIALOG --backtitle "$BACKTITLE" --title "$TITLE" \
	    		--extra-button --extra-label " Cancel "\
    			--cancel-label " Previous " \
			 	--form "Please verify the Nagios path.\nModify path if they are incorrect" 20 54 0	 \
			"Etc    :" 		1 1	"$NAGIOS_ETC" 1 10 35 0 \
			"Plugin :"		3 1 "$NAGIOS_PLUGIN" 3 10 35 0 \
			"Bin    :"		5 1 "$NAGIOS_BIN" 5 10 35 0 \
			"CGI    :" 		7 1 "$NAGIOS_CGI" 7 10 35 0 \
			"Html   :" 		9 1 "$NAGIOS_HTML" 9 10 35 0 \
			"Log    :" 		11 1 "$NAGIOS_LOG" 11 10 35 0 2>&1 1>&3`
			temp=$?
			case $temp in
			3)#No
				dialog_yesno_d "\nWould you want to change the type of Nagios installation?" \
				7 60
			   temp=$?
			    if [ $temp = 0 ] ; then
			     	err=2
			    else if [ $temp = 1 ] ; then
			    	err=0
			    else
			    	quit
			    fi
			    fi
				;;
			1)#Previous
				if test -a $OREON_CONF ; then
					Old_oreon_conf
				else
					Warning
				fi
				prev_funct
				;;
			0)#yes
				;;
			*)
				quit
				;;
			esac
			exec 3>&-
		done
		if [ $err != 2 ] ; then
			i=0
			for var in $value
			do
		       	case $i in
		       	0)
		       		TEMP_NAGIOS_ETC=$var
		       		;;
		       	1)
		       		TEMP_NAGIOS_PLUGIN=$var
		       		;;
		       	2)
		       		TEMP_NAGIOS_BIN=$var
		       		;;
		       	3)
		       		TEMP_NAGIOS_CGI=$var
		       		;;
		       	4)
		       		TEMP_NAGIOS_HTML=$var
		       		;;
		        5)
		        	TEMP_NAGIOS_LOG=$var
		        	;;
		        *)
		        	;;
		        esac
		        i=$(($i + 1))
		    done
		    # Test nagios path 
			if [ -n "$TEMP_NAGIOS_ETC" ] &&	[ -n "$TEMP_NAGIOS_PLUGIN" ] \
				&& [ -n "$TEMP_NAGIOS_BIN" ] && [ -n "$TEMP_NAGIOS_CGI" ] \
				&& [ -n "$TEMP_NAGIOS_HTML" ] && [ -n "$TEMP_NAGIOS_LOG" ] ; then 
				rm $TEMP 2> /dev/null
				test_install_nagios
				err=0
			else
				err=1
			fi
		fi
			
		# recall of Nagios path
		if [ $err != 2 ] && [ $err != 1 ]; then
			temp=0
			while [ $temp != 1 ]
			do
				dialog_yesno "Recall Nagios path :\
					\nEtc	   : $NAGIOS_ETC\
					\nPlugin : $NAGIOS_PLUGIN\
					\nBin	   : $NAGIOS_BIN\
					\nCgi	   : $NAGIOS_CGI\
					\nHtml   : $NAGIOS_HTML\
					\nLog	   : $NAGIOS_LOG\
					\n\nAre you ok with all path?" 20 58		  	

				case $temp in
				0)#Cancel
					test_quit "\n$QUITMSG"
					err=3
					;;
				3)#No
					temp=1
					err=3
					;;
				2)#Previous
					Nagios_conf
					prev_funct
					;;
				1)#yes
					err=0
					;;
				*)
					quit
					;;
				esac
			done
		fi

	done
	#log nagios type install
	log_set_line "#Nagios type install"
	log_set_line "Nagios install		: $inst_nag"
	log_set_line ""

	#log nagios path
	log_set_line "#Nagios path"
	log_set_line "Etc			: OK -> $NAGIOS_ETC"
	NAGIOS_ETC=${NAGIOS_ETC%/}
	log_set_line "Plugin			: OK -> $NAGIOS_PLUGIN"
	NAGIOS_PLUGIN=${NAGIOS_PLUGIN%/}
	log_set_line "Bin			: OK -> $NAGIOS_BIN"
	NAGIOS_BIN=${NAGIOS_BIN%/}
	log_set_line "Cgi			: OK -> $NAGIOS_CGI"
	NAGIOS_CGI=${NAGIOS_CGI%/}
	log_set_line "Html			: OK -> $NAGIOS_HTML"
	NAGIOS_HTML=${NAGIOS_HTML%/}
	log_set_line "Log			: OK -> $NAGIOS_LOG"
	NAGIOS_LOG=${NAGIOS_LOG%/}

	Centreon_path
	#User_management
}

#ask user to specify centreon path and test if exist or create the path
function Centreon_path() {
	# Configuration Centreon path
	log_set_title "Centreon install path"
	
	err=1
	while [ $err != 0 ]
	do
		#setup directory for centreon
		if [ -z $INSTALL_DIR_CENTREON ] ; then
			dialog_input "\nPlease specify the location for installing Centreon:" "/usr/local/oreon"
		else
			dialog_input "\nPlease specify the location for installing Centreon:" "$INSTALL_DIR_CENTREON"
		fi
		case $temp in
		3)#Cancel
			test_quit "\n$QUITMSG"
			;;
		1)#Previous
			Nagios_conf
			prev_funct
			;;
		0)#yes
			INSTALL_DIR_CENTREON=`cat $TEMP`
			if [ -n $INSTALL_DIR_CENTREON ] ; then
				if [ -d $INSTALL_DIR_CENTREON ] ; then
					err=0
				else
					dialog_yesno_d "\nUnable to find the directory:\n$INSTALL_DIR_CENTREON
						\nWould you want to create it" 9 62
					if [ $temp = 0 ] ; then
						tmkdir=`mkdir "$INSTALL_DIR_CENTREON"`
						err=`echo -n "$tmkdir" | wc -c` 
					fi
				fi
			fi
			;;
		*)
			quit
			;;
		esac
	done

	log_set_line "Centreon path		: OK -> $INSTALL_DIR_CENTREON"
	INSTALL_DIR_CENTREON=${INSTALL_DIR_CENTREON%/}

	Sudo_file
}

#ask user to specify the sudo file path and test if exist
function Sudo_file() {
	# Sudo_file
	log_set_title "Configuration file for sudo"
	
	err=1
	while [ $err != 0 ]
	do
		if [ -z $SUDO_FILE ] ; then
			dialog_input "\nPlease specify the location of sudo file:\n" "/etc/sudoers"
		else
			dialog_input "\nPlease specify the location of sudo file:\n" "$SUDO_FILE"
		fi
		case $temp in
		3)#Cancel
			test_quit "\n$QUITMSG"
			;;
		1)#Previous
			Centreon_path
			prev_funct
			;;
		0)#yes
			SUDO_FILE=`cat $TEMP`
			if [ -n $SUDO_FILE ] ; then
				err=0
			fi
			;;
		*)
			quit
			;;
		esac
	done

	log_set_line "Sudooer file		: OK -> $SUDO_FILE"
	SUDO_FILE=${SUDO_FILE%/}

	Search_tool
}


#search rrd perl module, rrdtool, bin mail, PEAR path.
#Ask and test if all path are not found
function Search_tool() {
	rm $TEMP_PATH 2> /dev/null
	# search tool
	log_set_title "Tool configuration"
	set_err 0
	err=0
	(
		# RDDs
		if [ -z $RRD_PERL ] ; then
			echo "XXX"
			echo 0
			echo "\nSearching RRD perl modules"
			echo "XXX"
			RRD_PERL=`find /usr/ -name "RRDs.pm" | sed -e 's/\/RRDs.pm$//'`
			if [ -n "$RRD_PERL" ] && [ -d $RRD_PERL ] ; then
				`echo "RRD_PERL=$RRD_PERL" > $TEMP_PATH`
				echo "XXX"
				echo 20
				echo "\nRRD perl module found at :\n$RRD_PERL"
				echo "XXX"
			else
				#log_set_err "Module perl		: FAILED"
				set_err 1
			fi
		else
			#log_set_title "Configuration of RRD"
			#log_set_line "Module perl			: OK -> $RRD_PERL"
			`echo "RRD_PERL=$RRD_PERL" > $TEMP_PATH`
			echo "XXX"
			echo 20
			echo "\nRRD perl module found at :\n$RRD_PERL"
			echo "XXX"
		fi

		# rrdtool
		if [ -z $BIN_RRDTOOL ] ; then
			#log_set_title "Searching rrdtool"
			echo "XXX"
			echo 40
			echo "\nSearching rrdtool"
			echo "XXX"
			BIN_RRDTOOL=`which rrdtool | sed -e 's/\/rrdtool$//'`
			if [ -n "$BIN_RRDTOOL" ] && [ -d $BIN_RRDTOOL ] ; then
				`echo "BIN_RRDTOOL=$BIN_RRDTOOL" >> $TEMP_PATH`
				echo "XXX"
				echo 60
				echo "\nfind rrdtool at :\n$BIN_RRDTOOL"
				echo "XXX"
				#log_set_line "Binary path rrdtool	: OK -> $BIN_RRDTOOL"
			else
				set_err 1
			fi
		else
			`echo "BIN_RRDTOOL=$BIN_RRDTOOL" >> $TEMP_PATH`
			echo "XXX"
			echo 60
			echo "\nfind rrdtool at :\n$BIN_RRDTOOL"
			echo "XXX"
		fi
		
		# mail
		if [ -z $BIN_MAIL ] ; then
			#log_set_title "Searching mail"
			echo "XXX"
			echo 80
			echo "\nSearching mail biary"
			echo "XXX"
			BIN_MAIL=`which mail | sed -e 's/\/mail$//'`
			if [ -n "$BIN_MAIL" ] && [ -d $BIN_MAIL ] ; then
				`echo "BIN_MAIL=$BIN_MAIL" >> $TEMP_PATH`
				echo "XXX"
				echo 100
				echo "\nfind mail binary at :\n$BIN_MAIL"
				echo "XXX"
			else
				set_err 1
			fi
		else
			`echo "BIN_MAIL=$BIN_MAIL" >> $TEMP_PATH`
			echo "XXX"
			echo 100
			echo "\nfind mail binary at : $BIN_MAIL"
			echo "XXX"
		fi

		echo "XXX"
		echo 100
		echo "\nConfiguration OK"
		echo "XXX"		
	) |
	$DIALOG --clear --backtitle "$BACKTITLE" --title "$TITLE" --gauge "RRDs" 9 62 0
	
	get_pear
		
	get_err
	err=$ERR
	rm_err
	if [ $err != 0 ] ; then
		Manual_tool
	fi

	. $TEMP_PATH
	
	# recall of mail, rrdtool and rrd perl path
	temp=0
	while [ $temp != 1 ]
	do
		dialog_yesno "Recall configuration path :\
			\nrrd perl    : $RRD_PERL\
			\nrrdtool	    : $BIN_RRDTOOL\
			\nmail binary : $BIN_MAIL\
			\nPear path		 : $PEAR_PATH\
			\n\nDo you agree with all configuration path?" 15 58		  	

		case $temp in
		0)#Cancel
			test_quit "\n$QUITMSG"
			err=3
			;;
		3)#No
			get_rrd_perl
			;;
		2)#Previous
			Sudo_file
			prev_funct
			;;
		1)#yes
			log_set_line "#Configuration of RRD"
			log_set_line "Module perl		: OK -> $RRD_PERL"
			log_set_line ""
			log_set_line "#Searching rrdtool"
			log_set_line "Binary path rrdtool	: OK -> $BIN_RRDTOOL"
			log_set_line ""
			log_set_line "#Searching mail"
			log_set_line "Binary path mail	: OK -> $BIN_MAIL"
			log_set_line ""
			log_set_line "#Config PEAR path"
			log_set_line "PEAR path		: OK -> $PEAR_PATH"
			;;
		*)
			quit
			;;
		esac
	done

	User_management
	
}


# Manual config of RRD_PERL, RRDTOOL, MAIL, PEAR

#ask user to specify the rrd perl module and test if it is a good path (RRDs.pm exist or not).
function get_rrd_perl() {
	err=1
	while [ $err != 0 ]
	do
		dialog_input "\nPlease specify the location of RRD perl module (RRDs.pm):\n" "$RRD_PERL"
		case $temp in
		3)#Cancel
			test_quit "\n$QUITMSG"
			;;
		1)#Previous
			Sudo_file
			prev_funct
			;;
		0)#yes
			RRD_PERL=`cat $TEMP`
			if [ -n $RRD_PERL ] && [ -d $RRD_PERL ] && [ -a "${RRD_PERL}/RRDs.pm" ] ; then
				err=0
			fi
			;;
		*)
			quit
			;;
		esac
	done
	get_rrdtool
}

#ask user to specify the rrdtool binary path, and test if it is a good path (rrdtool exist or not).
function get_rrdtool() {
	err=1
	while [ $err != 0 ]
	do
		dialog_input "\nPlease specify the location of binary rrdtool:\n" "$BIN_RRDTOOL"
		case $temp in
		3)#Cancel
			test_quit "\n$QUITMSG"
			;;
		1)#Previous
			get_rrd_perl
			prev_funct
			;;
		0)#yes
			BIN_RRDTOOL=`cat $TEMP`
			if [ -n $BIN_RRDTOOL ] && [ -d $BIN_RRDTOOL ] && [ -a "${BIN_RRDTOOL}/rrdtool" ] ; then
				err=0
			fi
			;;
		*)
			quit
			;;
		esac
	done
	get_bin_mail
}

#ask user to specify the mail binary path, and test if it is a good path (mail exist or not).
function get_bin_mail() {
	err=1
	while [ $err != 0 ]
	do
		dialog_input "\nPlease specify the location of binary mail:\n" "$BIN_MAIL"
		case $temp in
		3)#Cancel
			test_quit "\n$QUITMSG"
			;;
		1)#Previous
			get_rrdtool
			prev_funct
			;;
		0)#yes
			BIN_MAIL=`cat $TEMP`
			if [ -n $BIN_MAIL ] && [ -d $BIN_MAIL ] && [ -a "${BIN_MAIL}/mail" ] ; then
				err=0
			fi
			;;
		*)
			quit
			;;
		esac
	done
	get_pear
}

#ask user to specify the PEAR path, and test if it is a good path (PEAR.php exist or not).
function get_pear() {
	if [ -z "$PEAR_PATH" ] ; then
		PEAR_PATH="/usr/share/pear"
	fi
	err=1
	while [ $err != 0 ]
	do
		dialog_input "\nPlease specify the location of PEAR path:\n" "$PEAR_PATH"
		case $temp in
		3)#Cancel
			test_quit "\n$QUITMSG"
			;;
		1)#Previous
			get_bin_mail
			prev_funct
			;;
		0)#yes
			PEAR_PATH=`cat $TEMP`
			if [ -n $BIN_MAIL ] && [ -d $BIN_MAIL ] && [ -a "${PEAR_PATH}/PEAR.php" ] ; then
				err=0
			fi
			;;
		*)
			quit
			;;
		esac
	done
}

#search Apache path configuration, web user and group, nagios user and group.
#test if all path, group and user are correct. Ask user if path(s) and/or group(s)
#and/or user(s) are not found.allows user to modify informations.
function User_management() {
	log_set_title "User management"
	clear_all
	(
	    echo "XXX"
	    echo 0
	    echo "\nConfiguration"
	    echo "XXX"
	    echo "XXX"
	    echo 10
	    echo "\nsearching Apache conf"
	    echo "XXX"

	    if test -d /etc/apache/conf ; then
	    	`echo  "DIR_APACHE=/etc/apache/conf" > $TEMP_PATH`
	    	`echo  "DIR_APACHE_CONF=/etc/apache/conf.d" >> $TEMP_PATH`
			`echo  "HTPASSWD=htpasswd" >> $TEMP_PATH`
			DIR_APACHE=/etc/apache/conf
			DIR_APACHE_CONF=/etc/apache/conf.d
			HTPASSWD=htpasswd
	    else if test -d /usr/local/apache2/conf ; then
	    	`echo  "DIR_APACHE=/usr/local/apache2/conf" > $TEMP_PATH`
	    	`echo  "DIR_APACHE_CONF=/usr/local/apache2/conf.d" >> $TEMP_PATH`
			`echo  "HTPASSWD=htpasswd2" >> $TEMP_PATH`
			DIR_APACHE=/usr/local/apache2/conf
			DIR_APACHE_CONF=/usr/local/apache2/conf.d
			HTPASSWD=htpasswd2
	    else if test -d /etc/apache2 ; then
			`echo  "DIR_APACHE=/etc/apache2" > $TEMP_PATH`
	    	`echo  "DIR_APACHE_CONF=/etc/apache2/conf.d" >> $TEMP_PATH`
			`echo  "HTPASSWD=htpasswd2" >> $TEMP_PATH`
			DIR_APACHE=/etc/apache2
			DIR_APACHE_CONF=/etc/apache2/conf.d
			HTPASSWD=htpasswd2
	    else if test -d /etc/httpd/conf ; then
			`echo  "DIR_APACHE=/etc/httpd/conf" > $TEMP_PATH`
	    	`echo  "DIR_APACHE_CONF=/etc/httpd/conf.d" >> $TEMP_PATH`
			`echo  "HTPASSWD=htpasswd" >> $TEMP_PATH`
	    	DIR_APACHE=/etc/httpd/conf
	    	DIR_APACHE_CONF=/etc/httpd/conf.d
	    	HTPASSWD=htpasswd
	    else if test -d /usr/local/etc/apache ; then
			`echo  "DIR_APACHE=/usr/local/etc/apache" > $TEMP_PATH`
	    	`echo  "DIR_APACHE_CONF=/usr/local/etc/apache/Includes" >> $TEMP_PATH`
			`echo  "HTPASSWD=htpasswd" >> $TEMP_PATH`			
			DIR_APACHE=/usr/local/etc/apache
	    	DIR_APACHE_CONF=/usr/local/etc/apache/Includes
			HTPASSWD=htpasswd
	    else if test -d /usr/local/etc/apache2 ; then
	    	`echo  "DIR_APACHE=/usr/local/etc/apache2" > $TEMP_PATH`
	    	`echo  "DIR_APACHE_CONF=/usr/local/etc/apache2/Includes" >> $TEMP_PATH`
			`echo  "HTPASSWD=htpasswd" >> $TEMP_PATH`
			DIR_APACHE=/usr/local/etc/apache2
			DIR_APACHE_CONF=/usr/local/etc/apache2/Includes
			HTPASSWD=htpasswd
	    fi
	    fi
	    fi
	    fi
	    fi
	    fi
	    
	    echo "XXX"
	    echo 20
	    echo "\nsearching Apache conf"
	    echo "XXX"

	    if test -e $DIR_APACHE/apache2.conf ; then
		    `echo  "APACHE_CONF=apache2.conf" >> $TEMP_PATH`
		    APACHE_CONF=apache2.conf
	    else if test -e $DIR_APACHE/commondhttpd.conf ; then
			`echo  "APACHE_CONF=commondhttpd.conf" >> $TEMP_PATH`
			APACHE_CONF=commondhttpd.conf
	    else if test -e $DIR_APACHE/httpd.conf ; then
			`echo  "APACHE_CONF=httpd.conf" >> $TEMP_PATH`
			APACHE_CONF=httpd.conf
	    fi
	    fi
	    fi
	    
	    #group apache
	    echo "XXX"
	    echo 40
	    echo "\nSearching Apache group"
	    echo "XXX"

	    WEB_GROUP=`more $DIR_APACHE/$APACHE_CONF | grep -w ^Group | cut -d " " -f 2`
	
	    if [ -z "$WEB_GROUP"  ] ; then
		for fichier in $DIR_APACHE/*
		  do
		  if [ -f "$fichier" ];	then
		      WEB_GROUP_TEMP=`more $fichier | grep -w ^Group | cut -d " " -f 2`
		      if [ -n "$WEB_GROUP_TEMP" ]; then
			  WEB_GROUP=$WEB_GROUP_TEMP
		      fi
		  fi
		done
	    fi
	    `echo  "WEB_GROUP=$WEB_GROUP" >> $TEMP_PATH`
	    
	    #User Apache
	    echo "XXX"
	    echo 50
	    echo "\nSearching Apache user"
	    echo "XXX"

	    WEB_USER=`more $DIR_APACHE/$APACHE_CONF 2> /dev/null | grep -w ^User | cut -d " " -f 2`
	    if [ -z "$WEB_USER" ] ; then
		for fichier in $DIR_APACHE/*
		do
			if [ -f "$fichier" ];	then
				WEB_USER_TEMP=`more $fichier | grep -w ^User | cut -d " " -f 2`
				if [ -n "$WEB_USER_TEMP" ]; then
					WEB_USER=$WEB_USER_TEMP
				fi
			fi
		done
	    fi
	    `echo  "WEB_USER=$WEB_USER" >> $TEMP_PATH`
		
	    #group nagios
	    echo "XXX"
	    echo 60
	    echo "\nNagios group"
	    echo "XXX"
	    NAGIOS_GROUP=`more $NAGIOS_ETC/nagios.cfg 2> /dev/null | grep ^nagios_group | cut -d = -f 2`

	    if [ -z "$NAGIOS_GROUP"  ] ; then
		for fichier in $NAGIOS_ETC/*.cfg
	      	do
		  	if [ -f "$fichier" ];	then
		      	NAGIOS_GROUP_TEMP=`more $fichier | grep ^nagios_group | cut -d = -f 2`
		      	if [ -n "$NAGIOS_GROUP_TEMP" ]; then
			  		NAGIOS_GROUP=$NAGIOS_GROUP_TEMP
		      	fi
		  	fi
	    	done
	    fi
	
	    if [ -n "$NAGIOS_GROUP"  ] ; then
		   	nagios_group_grep=`grep $NAGIOS_GROUP /etc/group > /dev/null; echo $?`
    		if [ $nagios_group_grep = 0 ]; then
    			`echo  "NAGIOS_GROUP=$NAGIOS_GROUP" >> $TEMP_PATH`
    		fi
	    fi
		
	    #user nagios
	    echo "XXX"
	    echo 70
	    echo "\nNagios user"
	    echo "XXX"

	    NAGIOS_USER=`more $NAGIOS_ETC/nagios.cfg 2> /dev/null | grep ^nagios_user | cut -d = -f 2`

	    if [ -z "$NAGIOS_USER"  ] ; then
		for fichier in $NAGIOS_ETC/*.cfg
		  do
		  if [ -f "$fichier" ];	then
		      NAGIOS_USER_TEMP=`more $fichier | grep ^nagios_user | cut -d = -f 2`
		      if [ -n "$NAGIOS_USER_TEMP" ]; then
			  NAGIOS_USER=$NAGIOS_USER_TEMP
		      fi
		  fi
		done
	    fi
	    if [ -n "$NAGIOS_USER"  ] ; then
	    	nagios_user_grep=`grep $NAGIOS_USER /etc/passwd > /dev/null; echo $?`
	    	if [ $nagios_user_grep = 0 ]; then
		    `echo  "NAGIOS_USER=$NAGIOS_USER" >> $TEMP_PATH`
		fi
	    fi
	    
	    #Truetype verdanab
	    echo "XXX"
	    echo 80
	    echo "\nInstallation of truetype verdanab"
	    echo "XXX"


	    log_set_line "#Truetype verdanab"

	    if test -d $TRUETYPE ; then
		`cp truetype/verdanab.ttf $TRUETYPE/verdanab.ttf > /dev/null`
	    else
		`mkdir -p $TRUETYPE > /dev/null`
		log_set_line "Create dir		: OK -> $TRUETYPE"
		`cp truetype/verdanab.ttf $TRUETYPE/verdanab.ttf > /dev/null`
	    fi
	    log_set_line "Type verdanab		: OK"
	    log_set_line ""
	    

	    #Pear fonts
	    echo "XXX"
	    echo 90
	    echo "\nInstallation of pear fonts"
	    echo "XXX"

	    log_set_line "#Pear fonts"
	    if test -d "$PEAR_PATH/Image/Canvas/Fonts" ; then
		`cp truetype/arial.ttf "$PEAR_PATH/Image/Canvas/Fonts/arial.ttf" > /dev/null`
	    else
		`mkdir -p "$PEAR_PATH/Image/Canvas/Fonts" > /dev/null`
		log_set_line "Create dir	: OK -> $PEAR_PATH/Image/Canvas/Fonts"
		`cp truetype/arial.ttf $PEAR_PATH/Image/Canvas/Fonts/arial.ttf > /dev/null`
	    fi
	    log_set_line "Pear fonts		: OK"
	    log_set_line ""

	    echo "XXX"
	    echo 100
	    echo "\nEnd configuration"
	    echo "XXX"

	) |
	$DIALOG --clear --backtitle "$BACKTITLE" --title "$TITLE" --gauge "RRDs" 9 62 0
	
	. $TEMP_PATH
	
	while [ -z "$WEB_GROUP" ] || [ -z "$WEB_USER" ] || [ -z "$NAGIOS_GROUP" ] || [ -z "$NAGIOS_USER" ]
	do 	
		if [ -z "$WEB_GROUP" ] ; then
			get_web_group
		fi
	
		if [ -z "$WEB_USER" ] ; then
			get_web_user
		fi
	
		if [ -z "$NAGIOS_GROUP" ] ; then
			get_nagios_group
		fi
	
		if  [ -z "$NAGIOS_USER" ]; then
			get_nagios_user
		fi
	done
	
	# recall of configuration
	temp=0
	while [ $temp != 1 ]
	do
	  dialog_yesno "Recall config path :\
	      \nApache directory      : $DIR_APACHE\
	      \nApache conf directory	: $DIR_APACHE_CONF\
	      \nhtpasswd              : $HTPASSWD\
	      \nApache conf           : $APACHE_CONF\
	      \nApache web group      : $WEB_GROUP\
	      \nApache web user       : $WEB_USER\
	      \nNagios group          : $NAGIOS_GROUP\
	      \nNagios user           : $NAGIOS_USER\
	      \n\nDo you agree with the configuration?" 15 58		  	
	  
	  case $temp in
	      0)#Cancel
                 test_quit "\n$QUITMSG"
		 ;;
	      3)#No
		get_web_group
		;;
	      2)#Previous
		Search_tool
		prev_funct
		;;
	      1)#yes
		log_set_line "Apache dir		: OK -> $DIR_APACHE"
		log_set_line "Apache conf dir		: OK -> $DIR_APACHE_CONF"
		log_set_line "htpasswd		: OK -> $HTPASSWD"
		log_set_line "Apache conf		: OK -> $APACHE_CONF"
		log_set_line "Apache group		: OK -> $WEB_GROUP"
		log_set_line "Apache user		: OK -> $WEB_USER"
		log_set_line "Nagios group		: OK -> $NAGIOS_GROUP"
		log_set_line "Nagios user		: OK -> $NAGIOS_USER"
		;;
	      4)
		quit
		;;
	  esac
	done
	
	Configure_apache
}

# Manualy set web_goup, web_user, nagios_group, nagios_user

#ask user to specify the Apache group. Test if information are correct.
function get_web_group() {
    err=1
    while [ $err != 0 ]
      do
      dialog_input "\nPlease specify the Apache group:\n" "$WEB_GROUP"
      case $temp in
	  3)#Cancel
             test_quit "\n$QUITMSG"
	     ;;
	   1)#Previous
	     Search_tool
	     prev_funct
       	     ;;
	   0)#yes
	     WEB_GROUP=`cat $TEMP`
	     if [ -n "$WEB_GROUP" ] ; then
		 web_group_grep=`grep $WEB_GROUP /etc/passwd > /dev/null; echo $?`
		 if [ $web_group_grep == 0 ]; then
		     err=0
		 fi
	     fi
	     ;;
	   *)
	     quit
	     ;;
      esac
    done
    get_web_user
}

#ask user to specify the Apache user. Test if information are correct.
function get_web_user() {
    err=1
    while [ $err != 0 ]
    do
      dialog_input "\nPlease specify the Apache user:\n" "$WEB_USER"
      case $temp in
	  3)#Cancel
             test_quit "\n$QUITMSG"
	     ;;
	  1)#Previous
	     get_web_group
	     prev_funct
	     ;;
	  0)#yes
	     WEB_USER=`cat $TEMP`
	     if [ -n "$WEB_USER" ] ; then
		web_user_grep=`grep $WEB_USER /etc/passwd > /dev/null; echo $?`
		if [ $web_user_grep == 0 ]; then
		    err=0
		fi
	     fi
	     ;;
	  *)
	    quit
	    ;;
      esac
    done
    get_nagios_group
}

#ask user to specify the Nagios group. Test if information are correct.
function get_nagios_group() {
	err=1
	while [ $err != 0 ]
	do
		dialog_input "\nPlease specify the nagios group:\n" "$NAGIOS_GROUP"
		case $temp in
		3)#Cancel
			test_quit "\n$QUITMSG"
			;;
		1)#Previous
			get_web_user
			prev_funct
			;;
		0)#yes
			NAGIOS_GROUP=`cat $TEMP`
				if [ -n "$NAGIOS_GROUP" ] ; then
					nagios_group_grep=`grep $NAGIOS_GROUP /etc/group > /dev/null; echo $?`
		    		if [ $nagios_group_grep != 0 ]; then
		    			log_set_line "Nagios group		: FAILED"
		    			ADD_NAGIOS_GROUP=1
						groupadd $NAGIOS_GROUP
						if [ $? == 0 ]; then
		 					log_set_line "Add nagios group		: OK"
			 				err=0
			 			else
						    dialog_msgbox "\nUnable to create user $NAGIOS_GROUP"
						fi
					else
						err=0
				    fi
				fi
			;;
		*)
			quit
			;;
		esac
	done
	get_nagios_user
}

#ask user to specify the Nagios user. Test if information are correct.
function get_nagios_user() {
	err=1
	while [ $err != 0 ]
	do
		dialog_input "\nPlease specify the nagios user:\n" "$NAGIOS_USER"
		case $temp in
		3)#Cancel
			test_quit "\n$QUITMSG"
			;;
		1)#Previous
			get_nagios_group
			prev_funct
			;;
		0)#yes
			NAGIOS_USER=`cat $TEMP`
			if [ -n "$NAGIOS_USER" ] ; then
				nagios_user_grep=`grep $NAGIOS_USER /etc/passwd > /dev/null; echo $?`
			    if [ $nagios_user_grep != 0 ]; then
			       	log_set_line "Nagios user		: FAILED"
			  		useradd -G $NAGIOS_GROUP $NAGIOS_USER
			  		if [ $? == 0 ]; then
					  	log_set_line "Add nagios user		: OK"
					  	err=0
					else
						dialog_msgbox "\nUnable to create user $NAGIOS_USER"
					fi
			    else
			    	err=0
			    fi
			fi
			;;
		*)
			quit
			;;
		esac
	done   
}

#add oreon.conf (or rewrite it) in httpd conf path. ans restart the apache server if user is ok
function Configure_apache() {
	#apache configuration
	log_set_title "Configure httpd.conf"
	if [ -e "$DIR_APACHE_CONF/oreon.conf" ] ; then
		temp=0
		while [ $temp != 1 ] && [ $temp != 3 ]
		do
			dialog_yesno "\nApache oreon configuration file found.
			\nDo you want to rewrite Apache configuration file?" 7 62
			
			case $temp in
			0)#Cancel
				test_quit "\n$QUITMSG"
				;;
			3)#No
			        log_set_line "#edit apache conf"
				log_set_line "Conf Apache	: OK -> already exist"
				;;
			2)#Previous
				Search_tool
				prev_funct
				;;
			1)#yes
				;;
			*)
				quit
				;;
			esac
		done
	else
		temp=1
	fi

	if [ $temp = 1 ] ; then
		echo "##" >$DIR_APACHE_CONF/oreon.conf
		echo "## Section add by OREON Install Setup" >>$DIR_APACHE_CONF/oreon.conf
		echo "##" >>$DIR_APACHE_CONF/oreon.conf
		echo "" >>$DIR_APACHE_CONF/oreon.conf
		echo "AddType application/x-java-jnlp-file .jnlp" >>$DIR_APACHE_CONF/oreon.conf
		echo "Alias /oreon/ $INSTALL_DIR_OREON/www/" >>$DIR_APACHE_CONF/oreon.conf
		echo "<Directory "$INSTALL_DIR_OREON/www">" >>$DIR_APACHE_CONF/oreon.conf
		echo "	  Options None" >>$DIR_APACHE_CONF/oreon.conf
		echo "	  AllowOverride AuthConfig Options" >>$DIR_APACHE_CONF/oreon.conf
		echo "    Order allow,deny" >>$DIR_APACHE_CONF/oreon.conf
		echo "    Allow from all" >>$DIR_APACHE_CONF/oreon.conf
		echo "</Directory>" >>$DIR_APACHE_CONF/oreon.conf

		log_set_line "#edit apache conf"
		log_set_line "Conf Apache		: OK"
	fi
	
	usermod -G $NAGIOS_GROUP,$WEB_GROUP $WEB_USER >> $LOG_FILE 2>> $LOG_FILE
	log_set_line ""
	log_set_line "#Add webuser to nagios group"
	log_set_line "User add		: OK"
	log_set_line ""

	#Restart Apache
	temp=0
	while [ $temp != 1 ] && [ $temp != 3 ]
	do
	  dialog_yesno "\nWould you want really restart Apache" 8 62
			
	  case $temp in
	      0)#Cancel
	         test_quit "\n$QUITMSG"
		 ;;
	      3)#No
	         log_set_line "Restart Apache		: NO"
		 ;;
	      2)#Previous
	         Search_tool
		 prev_funct
		 ;;
	      1)#yes
	         ;;
	      *)
	         quit
		 ;;
	  esac
	done
	
	if [ $temp = 1 ] ; then
	    if test -x "/etc/init.d/apache" ; then
		res=`/etc/init.d/apache restart >/dev/null 2>/dev/null ; echo "$?"`
	    else if test -x "/etc/init.d/httpd" ; then
	        res=`/etc/init.d/httpd restart >/dev/null 2>/dev/null ; echo "$?"`
	    else if test -x "/etc/init.d/apache2" ; then
	        res=`/etc/init.d/apache2 restart >/dev/null 2>/dev/null ; echo "$?"`
	    else
	        res=3
	    fi
	    fi
	    fi

	   # res=0
	    if [ $res != 0 ] ; then 
		log_set_line "Restart Apache		: FAILED"
		dialog_msgbox "\nApache can't be restarted"
	    else
		log_set_line "Restart Apache		: OK"
		dialog_msgbox "\nApache restarted"
	    fi
	fi
	confirm_centreon
}

#ask if user is sure that he want to continue the installation. Overwhise quit the installation
function confirm_centreon() {
    log_set_title "Install Centreon interface"
    if test -f $INSTALL_DIR_CENTREON/www/oreon.conf.php ; then
	temp=1
	while [ $temp != 0 ] 
	do
	  dialog_yesno_d "\nOreon is already install on your server\nAre you sure you want to install Centreon?" 8 62

	  case $temp in
	      0)#Yes
              	 ;;
	      1)#No
	         test_quit "\n$QUITMSG"
	         ;;
	      *)
	         quit
		 ;;
	esac
	done
    fi
    Install_centreon
}

#copy several centreon path
function Install_centreon() {
    log_set_line "#install centreon"
    (
	echo "XXX"
	echo "0"
	echo "\nStart Centreon installation"
	echo "XXX"
	i=10
	log_set_line "#Dir install"
	for directory in "filesGeneration" "filesUpload" "GPL_LIB" "log" "www" "cron" "ODS" "ODS_SRC_ETC" "doc"
	  do
	  echo "XXX"
	  echo $i
	  echo "\nCopy : $directory "
	  echo "XXX"
	  i=$(($i+10))
	  if test -d $directory ; then
	      cp -Rf $directory $INSTALL_DIR_CENTREON 2>/dev/null
	      log_set_line "Copy			: OK -> $directory"
	  else
	      log_set_line "Copy			: FAILED -> $directory"
	  fi
	done
	
	echo "XXX"
	echo "100"
	echo "\nEnd Installation"
	echo "XXX"

    ) |
    $DIALOG --clear --backtitle "$BACKTITLE" --title "$TITLE" --gauge "Install centereon" 9 62 0
    log_set_line ""

    Install_centreon_plugin
}

#copy plugin centreon
function Install_centreon_plugin() {
    temp=1
    while [ $temp != 0 ] 
      do
      dialog_yesno_d "\nDo you want to install Centreon's Plugins?" 7 62
      
      case $temp in
	  0)#Yes
             ;;
	  1)#No
	    test_quit "\n$QUITMSG"
	    ;;
	  *)
	  quit
	  ;;
      esac
      done

      log_set_line "#Plugin install"

      (
	  echo "XXX"
	  echo "0"
	  echo "\nBegining of Centreon's plugins installation"
	  echo "XXX"

	  i=0
	  if [ -n "$PLUGINS_DIR" ]; then
	      mkdir $PLUGINS_DIR/srctmp 2> /dev/null
	      cp ${PLUGINS_DIR}/src/* ${PLUGINS_DIR}/srctmp 2> /dev/null
	      
	      for fichier in ${PLUGINS_DIR}/src/*
	      do
		if [ -f "$fichier" ] ; then
		    if [ $i -lt 60 ] ; then 
			    i=$(($i+2))
		    fi
		    echo "XXX"
		    echo "$i"
		    echo "\nCopy $fichier in $NAGIOS_PLUGIN"
		    echo "XXX"
		    filename=`echo $fichier  | sed -e 's|.*\/\(.*\)|\1|'` 
		    `sed -e 's|@INSTALL_DIR_NAGIOS@|'"$INSTALL_DIR_NAGIOS"'|g' \
			-e 's|@NAGIOS_ETC@|'"$NAGIOS_ETC"'|g' \
			-e 's|@NAGIOS_PLUGINS@|'"$NAGIOS_PLUGIN"'|g' \
			-e 's|@RRDTOOL_PERL_LIB@|'"$RRD_PERL"'|g' \
			-e 's|@INSTALL_DIR_OREON@|'"$INSTALL_DIR_OREON"'|g' \
			"$fichier" > "$PLUGINS_DIR/srctmp/$filename"`
			log_set_line "copy Plugin		: OK -> $filename"
		fi

	      done
	  
	      echo "XXX"
	      echo "65"
	      echo "\nFinalisation of copy"
	      echo "XXX"

	      rm -Rf $PLUGINS_DIR/srctmp/oreon.* 2> /dev/null
	      cp --preserve=mode $PLUGINS_DIR/srctmp/* $NAGIOS_PLUGIN
	      rm -Rf $PLUGINS_DIR/srctmp
	  fi
 
       echo "XXX"
       echo "100"
       echo "\nEnd of plugins installation"
       echo "XXX"
	  
      )|
      $DIALOG --clear --backtitle "$BACKTITLE" --title "$TITLE" --gauge "Installation of Centreon's plugins" 9 62 0
      

    #chown -R $WEB_USER:$NAGIOS_GROUP $NAGIOS_PLUGIN >> $LOG_FILE 2>> $LOG_FILE
    #chmod 775 $NAGIOS_PLUGIN >> $LOG_FILE 2>> $LOG_FILE
    #chmod 775 $NAGIOS_PLUGIN/* >> $LOG_FILE 2>> $LOG_FILE
    #find $NAGIOS_PLUGIN -name "check_dhcp" -exec chown root.$NAGIOS_GROUP -d {};
    #find $NAGIOS_PLUGIN -name "check_dhcp" -exec chmod "+s" -d {};
      
      log_set_line ""
      log_set_line "#Search oreon.conf"
      if test -a $NAGIOS_PLUGIN/oreon.conf ; then
	  log_set_line "find Oreon.conf		: OK -> $NAGIOS_PLUGIN/oreon.conf"
	  temp=1
	  while [ $temp != 0 ] 
	  do
	    dialog_yesno_d "\nFinding Centreon configuration file 'oreon.conf'\
		\nDo you want to overwrite this file? (You must regenerate this file from Oreon interface)" 8 62
	    
	    case $temp in
		0)#Yes
		cp ${PLUGINS_DIR}oreon.conf $NAGIOS_PLUGIN 2> /dev/null
		log_set_line "Replace oreon.conf		: OK"
		;;
		1)#No
		test_quit "\n$QUITMSG"
		;;
		*)
		quit
		;;
	    esac
	  done
      
	  
	  echo_success "Finding Oreon Plugins configuration file 'oreon.conf' :" "OK"
	  echo "You already seem to have installed the plugins Oreon."
	  echo "Do you want overwrite this file ? You must regenerate this one from Oreon interface."
	  echo -n "[y/n], default to [n]:"
	  read temp
	  if [ "$temp" != "y" ] && [ "$temp" != "n" ] && [ ! -z $temp ] ;then
	      while [ "$temp" != "y" ] && [ "$temp" != "n" ] && [ ! -z $temp ]
		do
		echo "Do you want overwrite this file ? You must regenerate this one from Oreon interface."
		echo -n "[y/n], default to [n]:"
		read temp
	      done
	  fi
	  if [ -z $temp ];then
	      temp=n
	  fi
      else
	  temp=y
      fi
      
      if [ $temp = "y" ];then

	  chmod 775 $NAGIOS_PLUGIN/oreon.conf >> $LOG_FILE 2>> $LOG_FILE
	  chown $WEB_USER:$WEB_GROUP $NAGIOS_PLUGIN/oreon.conf >> $LOG_FILE 2>> $LOG_FILE
      fi
      
      cp ${PLUGINS_DIR}oreon.pm $NAGIOS_PLUGIN >> $LOG_FILE 2>> $LOG_FILE
      chmod 775 $NAGIOS_PLUGIN/oreon.pm >> $LOG_FILE 2>> $LOG_FILE
      
      
      Install_trap_centreon
}

#Install traps
function Install_trap_centreon(){
    temp=1
    while [ $temp != 0 ] 
    do
      dialog_yesno_d "\nDo you want to install Centreon's trap ?" 7 62
      
      case $temp in
	  0)#Yes
             ;;
	  1)#No
	    test_quit "\n$QUITMSG"
	    ;;
	  *)
	  quit
	  ;;
      esac
    done

      err=1
      while [ $err != 0 ]
      do
	if [ -z $SNMP_DIR ] ; then
	    dialog_input "\nPlease specify the location of your SNMP configuration file?:\n" "/etc/snmp/"
	else
	    dialog_input "\nPlease specify the location of sudo file:\n" "$SNMP_DIR"
	fi
	case $temp in
	  3)#Cancel
	    test_quit "\n$QUITMSG"
	    ;;
	  1)#Previous
	    Install_centreon
	    prev_funct
	    ;;
	  0)#yes
	    SNMP_DIR=`cat $TEMP`
	    if [ -n "$SNMP_DIR" ] && [ -d "$SNMP_DIR" ]  ; then
		err=0
	    fi
	    ;;
	  *)
	    quit
	    ;;
	esac
      done
      
      log_set_line ""
      log_set_line "#Trap install"

      (
	  echo "XXX"
	  echo "0"
	  echo "\nBegining of trap installation"
	  echo "XXX"
	  if [ -n "$PLUGINS_DIR" ] ; then
	      echo "XXX"
	      echo "5"
	      echo "\nBegining of trap installation"
	      echo "XXX"

	      if [ -d "$NAGIOS_PLUGIN/traps" ]; then
		  log_set_line "Traps directory	:	OK -> $NAGIOS_PLUGIN/traps"
	      else
		  mkdir $NAGIOS_PLUGIN/traps 2> /dev/null
		  log_set_line "Traps directory		: FAILED"
		  log_set_line "create directory	: OK -> $NAGIOS_PLUGIN/traps"
	      fi

	      echo "XXX"
	      echo "10"
	      echo "\nTry to copy snmptrapd.conf"
	      echo "XXX"
	      log_set_line "#copy snmptrapd.conf"
	      if [ -e "${PLUGINS_DIR}/src/traps/conf/snmptrapd.conf" ]; then
		  if [ -e "$SNMP_DIR/snmptrapd.conf" ]; then
		      echo "XXX"
		      echo "10"
		      echo "\nOld snmptrapd found./nCreate Backup : snmptrapd.conf.old"
		      echo "XXX"

		      mv $SNMP_DIR/snmptrapd.conf $SNMP_DIR/snmptrapd.conf.old
		      log_set_line "Found snmptrapd.conf	: OK -> $SNMP_DIR/snmptrapd.conf"
		      log_set_line "Create backup		: OK -> $SNMP_DIR/snmptrapd.conf.old"
		  fi
		  echo "XXX"
		  echo "10"
		  echo "\nCopy ${PLUGINS_DIR}/src/traps/conf/snmptrapd.conf"
		  echo "XXX"
		  `sed -e 's|@SNMPTT_INI_FILE@|'"${SNMP_DIR}/centreon_traps/snmptt.ini"'|g' \
		      "${PLUGINS_DIR}/src/traps/conf/snmptrapd.conf" > "$SNMP_DIR/snmptrapd.conf"`
		  log_set_line "Copy snmptrapd.conf	: OK -> $SNMP_DIR/snmptrapd.conf"
	      else
		  log_set_line "Copy snmptrapd.conf	: CRITICAL"
	      fi

	      echo "XXX"
	      echo "15"
	      echo "\nTest Centreon's traps directory"
	      echo "XXX"
	      log_set_line "#Centreon traps directory"
	      if [ -d "$SNMP_DIR/centreon_traps" ]; then
		  log_set_line "Centreon traps path	: OK -> $SNMP_DIR/centreon_traps"
		  echo "XXX"
		  echo "15"
		  echo "\nCentreon's traps directory found at $SNMP_DIR/centreon_traps"
		  echo "XXX"
	      else
		  echo "XXX"
		  echo "15"
		  echo "\nCentreon's traps directory not found./nCreate directory : $SNMP_DIR/centreon_traps"
		  echo "XXX"
		  mkdir ${SNMP_DIR}/centreon_traps
		  log_set_line "Centreon traps path	: FAILED"
		  log_set_line "Create path		: OK -> $SNMP_DIR/centreon_traps"
	      fi

	      echo "XXX"
	      echo "20"
	      echo "\nTry to copy snmptt.ini"
	      echo "XXX"

	      log_set_line ""
	      log_set_line "#Copy snmptt.ini"
	      if [ -e "${PLUGINS_DIR}/src/traps/conf/snmptt.ini" ]; then
		  if [ -e "${SNMP_DIR}/centreon_traps/snmptt.ini" ]; then
		      echo "XXX"
		      echo "20"
		      echo "\nOld snptt.ini found./nCreate Backup : snmptt.ini.old"
		      echo "XXX"
		      mv ${SNMP_DIR}/centreon_traps/snmptt.ini ${SNMP_DIR}/centreon_traps/snmptt.ini.old
		      log_set_line "Found snmptt.ini		: OK -> $SNMP_DIR/snmptt.ini"
		      log_set_line "Create backup		: OK -> $SNMP_DIR/snmptt.ini.old"

		  fi
		  echo "XXX"
		  echo "20"
		  echo "\nCopy snmptt.ini"
		  echo "XXX"
		  cp ${PLUGINS_DIR}/src/traps/conf/snmptt.ini ${SNMP_DIR}/centreon_traps/
		  log_set_line "Copy snmptt.ini		: OK -> $SNMP_DIR/snmptrapd.conf"

	      else
		  log_set_line "Copy snmptt.ini		: CRITICAL"
	      fi
	      echo "XXX"
	      echo "25"
	      echo "\nTry copy snmp.conf"
	      echo "XXX"
	      log_set_line ""
	      log_set_line "#Copy snmp.conf"

	      if [ -e "${PLUGINS_DIR}/src/traps/conf/snmp.conf" ]; then	
		  if [ -e "${SNMP_DIR}/snmp.conf" ]; then
		      echo "XXX"
		      echo "25"
		      echo "\nTry copy snmp.conf"
		      echo "XXX"
		      mv ${SNMP_DIR}/snmp.conf ${SNMP_DIR}/snmp.conf.old
		      log_set_line "Found snmp.conf		: OK -> $SNMP_DIR/snmp.conf"
		      log_set_line "Create Backup		: OK -> $SNMP_DIR/snmp.conf.old"
		  fi
		  echo "XXX"
		  echo "25"
		  echo "\nTry to copy snmp.conf"
		  echo "XXX"
		  cp ${PLUGINS_DIR}/src/traps/conf/snmp.conf ${SNMP_DIR}
		  log_set_line "Copy snmp.conf			: OK -> $SNMP_DIR/snmptrapd.conf"
	      else
		  echo_passed "Cannot found ${PLUGINS_DIR}/src/traps/conf/snmp.conf" "CRITICAL"
		  log_set_line "Copy snmp.conf			: CRITICAL"
	      fi

	      echo "XXX"
	      echo "30"
	      echo "\nRestart snmpd"
	      echo "XXX"
	      #set centreon path owner and group
	      log_set_line ""
	      log_set_line "#Restart snmptrapd"
	      chown -R ${WEB_USER}.${NAGIOS_GROUP} ${SNMP_DIR}/centreon_traps/
	      log_set_line "Set owne and group		: OK"
	      if [ -e "/etc/init.d/snmptrapd" ] ;then
		  /etc/init.d/snmptrapd restart 2>/dev/null 1>/dev/null
		  log_set_line "Restart snmptrapd	: OK"
	      fi
	      /etc/init.d/snmpd restart  2>/dev/null 1>/dev/null
	      log_set_line "Restart snmpd		: OK"


	      echo "XXX"
	      echo "35"
	      echo "\nTry to copy snmptt"
	      echo "XXX"
	      #Copy snmptt
	      log_set_line ""
	      log_set_line "#Copy snmptt"
	      if [ -e "${PLUGINS_DIR}/src/traps/conf/snmptt" ]; then
		  echo "XXX"
		  echo "35"
		  echo "\nCopy snmptt"
		  echo "XXX"
		  cp ${PLUGINS_DIR}/src/traps/conf/snmptt /usr/sbin/
		  #chmod +x /usr/sbin/snmptt
		  log_set_line "Copy snmptt		: OK -> /usr/sbin/snmptt"
	      else
		  echo "XXX"
		  echo "35"
		  echo "\nUnable to copy snmptt"
		  echo "XXX"
		  log_set_line "Copy snmptt		: CRITICAL"
	      fi


	      echo "XXX"
	      echo "40"
	      echo "\nTry to copy snmpttconvertmib"
	      echo "XXX"
	      log_set_line ""
	      log_set_line "Copysnmpttconvertmib"
	      #Copy snmpttcenvertmib
	      if [ -e "${PLUGINS_DIR}/src/traps/conf/snmpttconvertmib" ]; then	
		  	      echo "XXX"
			      echo "40"
			      echo "\nCopy snmpttconvertmib"
			      echo "XXX"
		  cp ${PLUGINS_DIR}/src/traps/conf/snmpttconvertmib /usr/sbin/
		  #chmod +x /usr/sbin/snmpttconvertmib
		  log_set_line "Copy snmpttconvertmib	: OK -> /usr/sbin/snmpttconvertmib"
	      else
		  echo "XXX"
		  echo "40"
		  echo "\nUnable to copy snmpttconvertmib"
		  echo "XXX"
		  log_set_line "Copy snmpttconvertmib	: FAILED"
	      fi

	      mkdir $PLUGINS_DIR/traptmp
	      i=15
	      
	      for fichier in ${PLUGINS_DIR}/src/traps/plugins/*
		do
		if [ -f "$fichier" ] ; then
		    if [ $i -lt 85 ] ; then 
			i=$(($i+15))
		    fi
		    echo "XXX"
		    echo "$i"
		    echo "\nCopy $fichier in $NAGIOS_PLUGIN/traps"
		    echo "XXX"
		    filename=`echo $fichier  | sed -e 's|.*\/\(.*\)|\1|'`
		    `sed -e 's|@INSTALL_DIR_NAGIOS@|'"$INSTALL_DIR_NAGIOS"'|g' \
			-e 's|@NAGIOS_ETC@|'"$NAGIOS_ETC"'|g' \
			-e 's|@NAGIOS_PLUGINS@|'"$NAGIOS_PLUGIN"'|g' \
			-e 's|@RRDTOOL_PERL_LIB@|'"$RRD_PERL"'|g' \
			-e 's|@INSTALL_DIR_OREON@|'"$INSTALL_DIR_OREON"'|g'  \
			"$fichier" > "$PLUGINS_DIR/traptmp/$filename"`
			log_set_line "copy Trap			: OK -> $filename"
		fi
	      done
	      cp $PLUGINS_DIR/traptmp/genSnmpttConfFile $PLUGINS_DIR/traptmp/fill_trapDB $PLUGINS_DIR/traptmp/trapHandler $NAGIOS_PLUGIN/traps/
	      rm -Rf $PLUGINS_DIR/traptemp 2> /dev/null
	      echo "XXX"
	      echo "95"
	      echo "\nFinalisation of copy"
	      echo "XXX"
	      cp --preserve=mode $PLUGINS_DIR/traptmp/* $NAGIOS_PLUGIN
	      rm -Rf $PLUGINS_DIR/traptmp
	  fi

	  echo "XXX"
	  echo "100"
	  echo "\nEnd of trap installation"
	  echo "XXX"
       )|
      $DIALOG --clear --backtitle "$BACKTITLE" --title "$TITLE" --gauge "Installation of Centreon's plugins" 9 62 0
      
     debug_all
}



set_right() {
    
	
    #fi

    chown -R $WEB_USER:$NAGIOS_GROUP $NAGIOS_PLUGIN >> $LOG_FILE 2>> $LOG_FILE
    chmod 775 $NAGIOS_PLUGIN >> $LOG_FILE 2>> $LOG_FILE
    chmod 775 $NAGIOS_PLUGIN/* >> $LOG_FILE 2>> $LOG_FILE
    find $NAGIOS_PLUGIN -name "check_dhcp" -exec chown root.$NAGIOS_GROUP -d {};
    find $NAGIOS_PLUGIN -name "check_dhcp" -exec chmod "+s" -d {};

			TEMP_DIR="src/"
			if [ -n "$PLUGINS_DIR" ] ;then
				TEMP_DIR="${PLUGINS_DIR}/src/"	
			fi
		    if [ -n "$PLUGINS_DIR/traps" ]; then
			if [ -e "$NAGIOS_PLUGIN/traps" ]; then
			    echo_passed "$NAGIOS_PLUGIN/traps already exists" "PASSED"
			else
				echo_success "$NAGIOS_PLUGIN/traps created" "OK"
			    mkdir $NAGIOS_PLUGIN/traps
			fi
			echo "";
			echo "Where is your SNMP configuration file?";
			echo -n "default to [/etc/snmp/]:";
			read tmp
			if [ ! -z "$tmp" ] ;then
				SNMP_DIR=$tmp;
			fi
			if [ ! -d "$SNMP_DIR" ] ;then
		        while [ ! -d "$SNMP_DIR" ]
		          do
		          echo ""
		          echo "Given SNMP configuration directory does not exists, correct your answer ? "
		          SNMP_DIR="/etc/snmp/";
		          echo -n "default to [/etc/snmp/]:"
		          read temp
		          if [ ! -z "$tmp" ] ;then
					SNMP_DIR=$tmp;
				  fi
		        done
			fi
			echo ""
			if [ -d "$SNMP_DIR" ] ;then
				if [ -e "${TEMP_DIR}traps/conf/snmptrapd.conf" ]; then
					if [ -e "$SNMP_DIR/snmptrapd.conf" ]; then
						mv $SNMP_DIR/snmptrapd.conf $SNMP_DIR/snmptrapd.conf.old
					fi
					`sed -e 's|@SNMPTT_INI_FILE@|'"${SNMP_DIR}/centreon_traps/snmptt.ini"'|g'  "${TEMP_DIR}traps/conf/snmptrapd.conf" > "$SNMP_DIR/snmptrapd.conf"`
					echo_success "Moving snmptrapd.conf to $SNMP_DIR" "OK"
				else
					echo_passed "Cannot found ${TEMP_DIR}traps/conf/snmptrapd.conf" "CRITICAL"
				fi
			fi
			if [ -d "$SNMP_DIR/centreon_traps" ]; then
			    echo_passed "${SNMP_DIR}/centreon_traps already exists" "PASSED"
			else
				 mkdir ${SNMP_DIR}/centreon_traps
				echo_success "${SNMP_DIR}/centreon_traps created" "OK" 
			fi
			if [ -e "${TEMP_DIR}traps/conf/snmptt.ini" ]; then	
				if [ -e "${SNMP_DIR}/centreon_traps/snmptt.ini" ]; then
					mv ${SNMP_DIR}/centreon_traps/snmptt.ini ${SNMP_DIR}/centreon_traps/snmptt.ini.old
				fi
				cp ${TEMP_DIR}traps/conf/snmptt.ini ${SNMP_DIR}/centreon_traps/
				echo_success "Moving snmptt.ini to ${SNMP_DIR}/centreon_traps/" "OK"
			else
				echo_passed "Cannot found ${TEMP_DIR}traps/conf/snmptt.ini" "CRITICAL"
			fi
			if [ -e "${TEMP_DIR}traps/conf/snmp.conf" ]; then	
				if [ -e "${SNMP_DIR}snmp.conf" ]; then
					mv ${SNMP_DIR}snmp.conf ${SNMP_DIR}snmp.conf.old
				fi
				cp ${TEMP_DIR}traps/conf/snmp.conf ${SNMP_DIR}
				echo_success "Moving snmp.conf to ${SNMP_DIR}" "OK"
			else
				echo_passed "Cannot found ${TEMP_DIR}traps/conf/snmp.conf" "CRITICAL"
			fi
			chown -R ${WEB_USER}.${NAGIOS_GROUP} ${SNMP_DIR}/centreon_traps/
			if [ -e "/etc/init.d/snmptrapd" ] ;then
				/etc/init.d/snmptrapd restart 2>/dev/null 1>/dev/null
				/etc/init.d/snmpd restart  2>/dev/null 1>/dev/null
			else
				/etc/init.d/snmpd restart 2>/dev/null 1>/dev/null
			fi
			if [ -e "${TEMP_DIR}traps/conf/snmptt" ]; then	
				cp ${TEMP_DIR}traps/conf/snmptt /usr/sbin/
				chmod +x /usr/sbin/snmptt
				echo_success "Moving snmptt to /usr/sbin/" "OK"
			else
				echo_passed "Cannot found ${TEMP_DIR}traps/conf/snmptt" "CRITICAL"
			fi
			if [ -e "${TEMP_DIR}traps/conf/snmpttconvertmib" ]; then	
				cp ${TEMP_DIR}traps/conf/snmpttconvertmib /usr/sbin/
				chmod +x /usr/sbin/snmpttconvertmib
				echo_success "Moving snmpttconvertmib to /usr/sbin/" "OK"
			else
				echo_passed "Cannot found ${TEMP_DIR}traps/conf/snmpttconvertmib" "CRITICAL"
			fi
			mv $PLUGINS_DIR/src/traps/genSnmpttConfFile $PLUGINS_DIR/src/traps/fill_trapDB $PLUGINS_DIR/src/traps/trapHandler $NAGIOS_PLUGIN/traps/
			chmod 775 $NAGIOS_PLUGIN/traps/* >> $LOG_FILE 2>> $LOG_FILE
			echo_success "$NAGIOS_PLUGIN/traps/'" "OK"
		fi
    #fi
	echo ""
    if test -a $NAGIOS_PLUGIN/oreon.conf ; then
		echo ""
		echo_success "Finding Oreon Plugins configuration file 'oreon.conf' :" "OK"
		echo "You already seem to have installed the plugins Oreon."
		echo "Do you want overwrite this file ? You must regenerate this one from Oreon interface."
		echo -n "[y/n], default to [n]:"
		read temp
		if [ "$temp" != "y" ] && [ "$temp" != "n" ] && [ ! -z $temp ] ;then
            while [ "$temp" != "y" ] && [ "$temp" != "n" ] && [ ! -z $temp ]
              do
              echo "Do you want overwrite this file ? You must regenerate this one from Oreon interface."
              echo -n "[y/n], default to [n]:"
              read temp
            done
        fi
		if [ -z $temp ];then
		    temp=n
		fi
    else
		temp=y
    fi

    if [ $temp = "y" ];then
		cp ${PLUGINS_DIR}oreon.conf $NAGIOS_PLUGIN >> $LOG_FILE 2>> $LOG_FILE
		chmod 775 $NAGIOS_PLUGIN/oreon.conf >> $LOG_FILE 2>> $LOG_FILE
		chown $WEB_USER:$WEB_GROUP $NAGIOS_PLUGIN/oreon.conf >> $LOG_FILE 2>> $LOG_FILE
	fi

    cp ${PLUGINS_DIR}oreon.pm $NAGIOS_PLUGIN >> $LOG_FILE 2>> $LOG_FILE
    chmod 775 $NAGIOS_PLUGIN/oreon.pm >> $LOG_FILE 2>> $LOG_FILE
}

function install_ods(){
	
	echo ""
	echo "------------------------------------------------------------------------"

}