#! /usr/bin/perl -w
###################################################################
# Oreon is developped with GPL Licence 2.0 
#
# GPL License: http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt
#
# Developped by : Julien Mathis - jmathis@merethis.com
#
###################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
#    For information : contact@centreon.com
####################################################################

use strict;
use warnings;
use DBI;
use File::stat;
use Getopt::Long;
use POSIX;

use vars qw($mysql_user $mysql_passwd $mysql_host $mysql_database_oreon $mysql_database_ods $opt_h $opt_a $data);

my $rsyncPath = "rsync";

#require "@CENTREON_ETC@/conf.pm";
require "/etc/centreon/conf.pm";

## Init Date
my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = gmtime(time);

# Init MySQL Connexion
my $dbhoreon = DBI->connect("DBI:mysql:database=".$mysql_database_oreon.";host=".$mysql_host, $mysql_user, $mysql_passwd, {'RaiseError' => 1});

# Plugins

my $sth2 = $dbhoreon->prepare("SELECT `id`, `ns_ip_address` FROM `nagios_server` WHERE `ns_activate` = '1' AND `localhost` = '0'");
if (!$sth2->execute) {
    die "Error:" . $sth2->errstr . "\n";
} else { 
	while (my $ns_server = $sth2->fetchrow_hashref()) {
		my $sth = $dbhoreon->prepare("SELECT `log_archive_path` FROM `cfg_nagios` WHERE `nagios_server_id` = '".$ns_server->{'id'}."'");
		if (!$sth->execute) {
		    die "Error:" . $sth->errstr . "\n";
		} else {
			my $archiveData = $sth->fetchrow_hashref();
			my $ls = `ssh -q $ns_server->{'ns_ip_address'} ls -l $archiveData->{'log_archive_path'}/ 2>> /dev/null | wc -l`;
			    if ($ls > 1){
					`$rsyncPath -c $ns_server->{'ns_ip_address'}:$archiveData->{'log_archive_path'}/* /var/lib/centreon/log/$ns_server->{'id'}/archives/`;
				}
			}
		}
	}
}

# SnmpTT configurations files
my $sth2 = $dbhoreon->prepare("SELECT `id`, `ns_ip_address` FROM `nagios_server` WHERE `ns_activate` = '1' AND `localhost` = '0'");
if (!$sth2->execute) {
    die "Error:" . $sth2->errstr . "\n";
} else { 
	while (my $ns_server = $sth2->fetchrow_hashref()) {
		my $ls = `ssh -q $ns_server->{'ns_ip_address'} ls -l $archiveData->{'log_archive_path'}/ 2>> /dev/null | wc -l`;
		    if ($ls > 1){
				`$rsyncPath -c /etc/snmp/centreon_traps/* $ns_server->{'ns_ip_address'}:/etc/snmp/centreon_traps/`;
			}
		}
	}
}

